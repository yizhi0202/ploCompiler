1 program 0
32 test 0
30 ; 0
2 const 1
32 var1 1
20 := 1
33 2 1
27 , 1
32 var3 1
20 := 1
33 32 1
30 ; 1
3 var 2
32 var2 2
27 , 2
32 var6 2
30 ; 2
4 procedure 3
32 add 3
28 ( 3
32 var4 3
27 , 3
32 var5 3
29 ) 3
30 ; 3
5 begin 4
32 var6 5
20 := 5
32 var4 5
16 + 5
32 var5 5
30 ; 5
8 while 6
32 var6 6
21 < 6
33 50 6
13 do 6
9 call 6
32 add 6
28 ( 6
32 var6 6
27 , 6
33 10 6
29 ) 6
6 end 7
5 begin 8
32 var1 9
20 := 9
17 - 9
33 10 9
19 / 9
33 5 9
16 + 9
33 2 9
18 * 9
33 3 9
30 ; 9
7 if 10
32 var1 10
26 = 10
32 var2 10
14 then 10
32 var2 10
20 := 10
32 var1 10
17 - 10
33 1 10
15 else 10
32 var2 10
20 := 10
32 var1 10
16 + 10
33 1 10
30 ; 10
8 while 11
32 var1 11
21 < 11
32 var2 11
13 do 11
32 var2 11
20 := 11
32 var2 11
17 - 11
33 1 11
30 ; 11
8 while 12
12 odd 12
33 2 12
13 do 12
32 var2 12
20 := 12
32 var2 12
16 + 12
33 2 12
30 ; 12
11 write 13
28 ( 13
32 var2 13
29 ) 13
30 ; 13
9 call 14
32 add 14
28 ( 14
32 var1 14
29 ) 14
30 ; 14
11 write 15
28 ( 15
32 var6 15
29 ) 15
30 ; 15
10 read 16
28 ( 16
32 var2 16
29 ) 16
30 ; 16
11 write 17
28 ( 17
32 var2 17
29 ) 17
6 end 18
